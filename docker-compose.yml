version: '3.8'

services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghabcdefgh
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LOG_DIRS=/bitnami/kafka/data
    networks:
      - app-network
    volumes:
      - kafka-data:/bitnami/kafka

  app1:
    build:
      context: .
      dockerfile: Dockerfile
    hostname: app1
    ports:
      - "8080:8080"
      - "50051:50051"
      - "7946:7946"
    environment:
      - INSTANCE_ID=instance-1
      - HTTP_PORT=8080
      - GRPC_PORT=50051
      - CLUSTER_PORT=7946
      - REDIS_ADDRESS=redis:6379
      - KAFKA_ADDRESS=kafka:9092
    depends_on:
      redis:
        condition: service_healthy
      kafka:
        condition: service_started
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "-q", "-O-", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  app2:
    build:
      context: .
      dockerfile: Dockerfile
    hostname: app2
    ports:
      - "8081:8080"
      - "50052:50051"
      - "7947:7946"
    environment:
      - INSTANCE_ID=instance-2
      - HTTP_PORT=8080
      - GRPC_PORT=50051
      - CLUSTER_PORT=7946
      - JOIN_ADDRESSES=app1:7946
      - REDIS_ADDRESS=redis:6379
      - KAFKA_ADDRESS=kafka:9092
    depends_on:
      - app1
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "-q", "-O-", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  app3:
    build:
      context: .
      dockerfile: Dockerfile
    hostname: app3
    ports:
      - "8082:8080"
      - "50053:50051"
      - "7948:7946"
    environment:
      - INSTANCE_ID=instance-3
      - HTTP_PORT=8080
      - GRPC_PORT=50051
      - CLUSTER_PORT=7946
      - JOIN_ADDRESSES=app1:7946
      - REDIS_ADDRESS=redis:6379
      - KAFKA_ADDRESS=kafka:9092
    depends_on:
      - app1
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "-q", "-O-", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  kafka-data: